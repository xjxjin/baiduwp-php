name: Build Docker Image & Pack Source Code

on:
  push:
    tags:
      - 'v*'

# git tag -a v1.0.0
# git push origin v1.0.0

jobs:
  build_and_upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse version from tag name
        run: echo "VERSION=$(echo $GITHUB_REF | sed -n 's/refs\/tags\/v\(.*\)/\1/p')" >> $GITHUB_ENV

      - name: Extract repository name
        run: echo "IMAGE_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Run Docker image (amd64)
        run: docker run --platform linux/amd64 -itd --name baiduwp-php ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Install zip
        run: docker exec baiduwp-php apt-get update && docker exec baiduwp-php apt-get install -y zip

      - name: Pack source code
        run: docker exec baiduwp-php zip -r /tmp/baiduwp-php.zip /app

      - name: Copy source code
        run: docker cp baiduwp-php:/tmp/baiduwp-php.zip ./${{ env.IMAGE_NAME }}-v${{ env.VERSION }}.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.IMAGE_NAME }}-v${{ env.VERSION }}.zip
          asset_name: ${{ env.IMAGE_NAME }}-v${{ env.VERSION }}.zip
          asset_content_type: application/x-zip-compressed
